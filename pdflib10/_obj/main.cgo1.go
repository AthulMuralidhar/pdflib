// Code generated by cmd/cgo; DO NOT EDIT.

//line /home/athul/pdflib/pdflib10/main.go:1:1
// Copyright Â© 2016 Abcum Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this info except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//go:build cgo
// +build cgo

package pdflib

// #include <stdio.h>
// #include <stdlib.h>
// #include "golang.h"
// #include "pdflib.h"
import _ "unsafe"
import "errors"
import "unsafe"

// PDFlib represents a PDFlib instance.
type PDFlib struct {
	val * /*line :30:7*/_Ctype_PDF /*line :30:12*/
}

// New creates a new PDFlb instance.
func New() *PDFlib {
	pdflib := &PDFlib{val: ( /*line :35:25*/_Cfunc_PDF_new /*line :35:33*/)()}
	err := pdflib.SetParameter("errorpolicy", "exception")
	if err != nil {
		return nil
	}
	return pdflib
}

func (p *PDFlib) catch() error {
	if num := func() _Ctype_int{ _cgo0 := /*line :44:30*/p.val; _cgoCheckPointer(_cgo0, nil); return /*line :44:36*/_Cfunc__PDF_get_errnum(_cgo0); }(); num > 0 {
		return errors.New(( /*line :45:21*/_Cfunc_GoString /*line :45:30*/)(func() *_Ctype_char{ _cgo0 := /*line :45:50*/p.val; _cgoCheckPointer(_cgo0, nil); return /*line :45:56*/_Cfunc__PDF_get_errmsg(_cgo0); }()))
	}
	return nil
}

// AddNamedDest ...
func (p *PDFlib) AddNamedDest(name, options string) error {
	func() { _cgo0 := /*line :52:23*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :52:39*/(name); var _cgo2 _Ctype_int = /*line :52:47*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :52:59*/(options); _cgoCheckPointer(_cgo0, nil); /*line :52:69*/_Cfunc__PDF_add_nameddest(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// AddPathPoint ...
func (p *PDFlib) AddPathPoint(path int, x, y float64, kind, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :58:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :58:47*/(path); var _cgo2 _Ctype_double = _Ctype_double /*line :58:63*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :58:76*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :58:90*/(kind); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :58:107*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :58:117*/_Cfunc__PDF_add_path_point(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }())
	return ret, p.catch()
}

// AddTableCell ...
func (p *PDFlib) AddTableCell(table, col, row int, text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :64:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :64:47*/(table); var _cgo2 _Ctype_int = _Ctype_int /*line :64:61*/(col); var _cgo3 _Ctype_int = _Ctype_int /*line :64:73*/(row); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :64:89*/(text); var _cgo5 _Ctype_int = /*line :64:97*/0; var _cgo6 *_Ctype_char = _Cfunc_CString /*line :64:109*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :64:119*/_Cfunc__PDF_add_table_cell(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }())
	return ret, p.catch()
}

// AddTextflow ...
func (p *PDFlib) AddTextflow(textflow int, text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :70:33*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :70:45*/(textflow); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :70:66*/(text); var _cgo3 _Ctype_int = /*line :70:74*/0; var _cgo4 *_Ctype_char = _Cfunc_CString /*line :70:86*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :70:96*/_Cfunc__PDF_add_textflow(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// AddThumbnail ...
func (p *PDFlib) AddThumbnail(image int) error {
	func() { _cgo0 := /*line :76:23*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :76:35*/(image); _cgoCheckPointer(_cgo0, nil); /*line :76:43*/_Cfunc__PDF_add_thumbnail(_cgo0, _cgo1); }()
	return p.catch()
}

// Align ...
func (p *PDFlib) Align(x, y float64) error {
	func() { _cgo0 := /*line :82:15*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :82:30*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :82:43*/(y); _cgoCheckPointer(_cgo0, nil); /*line :82:47*/_Cfunc__PDF_align(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// Arc ...
func (p *PDFlib) Arc(x, y, r, alpha, beta float64) error {
	func() { _cgo0 := /*line :88:13*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :88:28*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :88:41*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :88:54*/(r); var _cgo4 _Ctype_double = _Ctype_double /*line :88:67*/(alpha); var _cgo5 _Ctype_double = _Ctype_double /*line :88:84*/(beta); _cgoCheckPointer(_cgo0, nil); /*line :88:91*/_Cfunc__PDF_arc(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }()
	return p.catch()
}

// Arcn ...
func (p *PDFlib) Arcn(x, y, r, alpha, beta float64) error {
	func() { _cgo0 := /*line :94:14*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :94:29*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :94:42*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :94:55*/(r); var _cgo4 _Ctype_double = _Ctype_double /*line :94:68*/(alpha); var _cgo5 _Ctype_double = _Ctype_double /*line :94:85*/(beta); _cgoCheckPointer(_cgo0, nil); /*line :94:92*/_Cfunc__PDF_arcn(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }()
	return p.catch()
}

// BeginDocument ...
func (p *PDFlib) BeginDocument(filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :100:35*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :100:51*/(filename); var _cgo2 _Ctype_int = /*line :100:63*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :100:75*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :100:85*/_Cfunc__PDF_begin_document(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// BeginFont ...
func (p *PDFlib) BeginFont(fontname string, a, b, c, d, e, f float64, options string) error {
	func() { _cgo0 := /*line :106:20*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :106:36*/(fontname); var _cgo2 _Ctype_int = /*line :106:48*/0; var _cgo3 _Ctype_double = _Ctype_double /*line :106:59*/(a); var _cgo4 _Ctype_double = _Ctype_double /*line :106:72*/(b); var _cgo5 _Ctype_double = _Ctype_double /*line :106:85*/(c); var _cgo6 _Ctype_double = _Ctype_double /*line :106:98*/(d); var _cgo7 _Ctype_double = _Ctype_double /*line :106:111*/(e); var _cgo8 _Ctype_double = _Ctype_double /*line :106:124*/(f); var _cgo9 *_Ctype_char = _Cfunc_CString /*line :106:138*/(options); _cgoCheckPointer(_cgo0, nil); /*line :106:148*/_Cfunc__PDF_begin_font(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6, _cgo7, _cgo8, _cgo9); }()
	return p.catch()
}

// BeginGlyph ...
func (p *PDFlib) BeginGlyph(glyphname string, wx, llx, lly, urx, ury float64) error {
	func() { _cgo0 := /*line :112:21*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :112:37*/(glyphname); var _cgo2 _Ctype_double = _Ctype_double /*line :112:58*/(wx); var _cgo3 _Ctype_double = _Ctype_double /*line :112:72*/(llx); var _cgo4 _Ctype_double = _Ctype_double /*line :112:87*/(lly); var _cgo5 _Ctype_double = _Ctype_double /*line :112:102*/(urx); var _cgo6 _Ctype_double = _Ctype_double /*line :112:117*/(ury); _cgoCheckPointer(_cgo0, nil); /*line :112:123*/_Cfunc__PDF_begin_glyph(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// BeginItem ..
func (p *PDFlib) BeginItem(tag, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :118:31*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :118:47*/(tag); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :118:63*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :118:73*/_Cfunc__PDF_begin_item(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// BeginLayer ..
func (p *PDFlib) BeginLayer(layer int) error {
	func() { _cgo0 := /*line :124:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :124:33*/(layer); _cgoCheckPointer(_cgo0, nil); /*line :124:41*/_Cfunc__PDF_begin_layer(_cgo0, _cgo1); }()
	return p.catch()
}

// BeginPageExt adds a new page to the document, and specify various options.
func (p *PDFlib) BeginPageExt(w, h float64, options string) error {
	func() { _cgo0 := /*line :130:24*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :130:39*/(w); var _cgo2 _Ctype_double = _Ctype_double /*line :130:52*/(h); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :130:66*/(options); _cgoCheckPointer(_cgo0, nil); /*line :130:76*/_Cfunc__PDF_begin_page_ext(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// BeginPattern ..
func (p *PDFlib) BeginPattern(w, h, xstep, ystep float64, painttype int) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :136:34*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :136:49*/(w); var _cgo2 _Ctype_double = _Ctype_double /*line :136:62*/(h); var _cgo3 _Ctype_double = _Ctype_double /*line :136:75*/(xstep); var _cgo4 _Ctype_double = _Ctype_double /*line :136:92*/(ystep); var _cgo5 _Ctype_int = _Ctype_int /*line :136:106*/(painttype); _cgoCheckPointer(_cgo0, nil); return /*line :136:118*/_Cfunc__PDF_begin_pattern(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }())
	return ret, p.catch()
}

// BeginTemplate ...
func (p *PDFlib) BeginTemplate(w, h float64, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :142:39*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :142:54*/(w); var _cgo2 _Ctype_double = _Ctype_double /*line :142:67*/(h); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :142:81*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :142:91*/_Cfunc__PDF_begin_template_ext(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// Circle ...
func (p *PDFlib) Circle(x, y, r float64) error {
	func() { _cgo0 := /*line :148:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :148:31*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :148:44*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :148:57*/(r); _cgoCheckPointer(_cgo0, nil); /*line :148:61*/_Cfunc__PDF_circle(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// CircularArc ...
func (p *PDFlib) CircularArc(x1, y1, x2, y2 float64) error {
	func() { _cgo0 := /*line :154:22*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :154:37*/(x1); var _cgo2 _Ctype_double = _Ctype_double /*line :154:51*/(y1); var _cgo3 _Ctype_double = _Ctype_double /*line :154:65*/(x2); var _cgo4 _Ctype_double = _Ctype_double /*line :154:79*/(y2); _cgoCheckPointer(_cgo0, nil); /*line :154:84*/_Cfunc__PDF_circular_arc(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// Clip ...
func (p *PDFlib) Clip() error {
	func() { _cgo0 := /*line :160:14*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :160:20*/_Cfunc__PDF_clip(_cgo0); }()
	return p.catch()
}

// CloseFont closes an open font handle which has not yet been used in the document.
func (p *PDFlib) CloseFont(font int) error {
	func() { _cgo0 := /*line :166:20*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :166:32*/(font); _cgoCheckPointer(_cgo0, nil); /*line :166:39*/_Cfunc__PDF_close_font(_cgo0, _cgo1); }()
	return p.catch()
}

// CloseGraphics closes vector graphics.
func (p *PDFlib) CloseGraphics(graphics int) error {
	func() { _cgo0 := /*line :172:24*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :172:36*/(graphics); _cgoCheckPointer(_cgo0, nil); /*line :172:47*/_Cfunc__PDF_close_graphics(_cgo0, _cgo1); }()
	return p.catch()
}

// CloseImage closes an image ...
func (p *PDFlib) CloseImage(image int) error {
	func() { _cgo0 := /*line :178:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :178:33*/(image); _cgoCheckPointer(_cgo0, nil); /*line :178:41*/_Cfunc__PDF_close_image(_cgo0, _cgo1); }()
	return p.catch()
}

// ClosePdiDocument ...
func (p *PDFlib) ClosePdiDocument(doc int) error {
	func() { _cgo0 := /*line :184:28*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :184:40*/(doc); _cgoCheckPointer(_cgo0, nil); /*line :184:46*/_Cfunc__PDF_close_pdi_document(_cgo0, _cgo1); }()
	return p.catch()
}

// ClosePdiPage ...
func (p *PDFlib) ClosePdiPage(page int) error {
	func() { _cgo0 := /*line :190:24*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :190:36*/(page); _cgoCheckPointer(_cgo0, nil); /*line :190:43*/_Cfunc__PDF_close_pdi_page(_cgo0, _cgo1); }()
	return p.catch()
}

// ClosePath ...
func (p *PDFlib) ClosePath() error {
	func() { _cgo0 := /*line :196:19*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :196:25*/_Cfunc__PDF_closepath(_cgo0); }()
	return p.catch()
}

// ClosePathFillStroke ...
func (p *PDFlib) ClosePathFillStroke() error {
	func() { _cgo0 := /*line :202:31*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :202:37*/_Cfunc__PDF_closepath_fill_stroke(_cgo0); }()
	return p.catch()
}

// ClosePathStroke ...
func (p *PDFlib) ClosePathStroke() error {
	func() { _cgo0 := /*line :208:26*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :208:32*/_Cfunc__PDF_closepath_stroke(_cgo0); }()
	return p.catch()
}

// Concat ...
func (p *PDFlib) Concat(a, b, c, d, e, f float64) error {
	func() { _cgo0 := /*line :214:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :214:31*/(a); var _cgo2 _Ctype_double = _Ctype_double /*line :214:44*/(b); var _cgo3 _Ctype_double = _Ctype_double /*line :214:57*/(c); var _cgo4 _Ctype_double = _Ctype_double /*line :214:70*/(d); var _cgo5 _Ctype_double = _Ctype_double /*line :214:83*/(e); var _cgo6 _Ctype_double = _Ctype_double /*line :214:96*/(f); _cgoCheckPointer(_cgo0, nil); /*line :214:100*/_Cfunc__PDF_concat(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// ContinueText ...
func (p *PDFlib) ContinueText(text string) error {
	func() { _cgo0 := /*line :220:23*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :220:39*/(text); _cgoCheckPointer(_cgo0, nil); /*line :220:46*/_Cfunc__PDF_continue_text(_cgo0, _cgo1); }()
	return p.catch()
}

// Create3dView ...
func (p *PDFlib) Create3dView(username, options string) error {
	func() _Ctype_int{ _cgo0 := /*line :226:23*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :226:39*/(username); var _cgo2 _Ctype_int = /*line :226:51*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :226:63*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :226:73*/_Cfunc__PDF_create_3dview(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// CreateAction ...
func (p *PDFlib) CreateAction(kind, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :232:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :232:50*/(kind); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :232:67*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :232:77*/_Cfunc__PDF_create_action(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// CreateAnnotation ...
func (p *PDFlib) CreateAnnotation(llx, llr, urx, ury float64, kind, options string) error {
	func() { _cgo0 := /*line :238:27*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :238:42*/(llx); var _cgo2 _Ctype_double = _Ctype_double /*line :238:57*/(llr); var _cgo3 _Ctype_double = _Ctype_double /*line :238:72*/(urx); var _cgo4 _Ctype_double = _Ctype_double /*line :238:87*/(ury); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :238:103*/(kind); var _cgo6 *_Ctype_char = _Cfunc_CString /*line :238:120*/(options); _cgoCheckPointer(_cgo0, nil); /*line :238:130*/_Cfunc__PDF_create_annotation(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// CreateBookmark ...
func (p *PDFlib) CreateBookmark(text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :244:36*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :244:52*/(text); var _cgo2 _Ctype_int = /*line :244:60*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :244:72*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :244:82*/_Cfunc__PDF_create_bookmark(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// CreateField ...
func (p *PDFlib) CreateField(llx, lly, urx, ury float64, name, kind, options string) error {
	func() { _cgo0 := /*line :250:22*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :250:37*/(llx); var _cgo2 _Ctype_double = _Ctype_double /*line :250:52*/(lly); var _cgo3 _Ctype_double = _Ctype_double /*line :250:67*/(urx); var _cgo4 _Ctype_double = _Ctype_double /*line :250:82*/(ury); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :250:98*/(name); var _cgo6 _Ctype_int = /*line :250:106*/0; var _cgo7 *_Ctype_char = _Cfunc_CString /*line :250:118*/(kind); var _cgo8 *_Ctype_char = _Cfunc_CString /*line :250:135*/(options); _cgoCheckPointer(_cgo0, nil); /*line :250:145*/_Cfunc__PDF_create_field(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6, _cgo7, _cgo8); }()
	return p.catch()
}

// CreateFieldgroup ...
func (p *PDFlib) CreateFieldgroup(name, options string) error {
	func() { _cgo0 := /*line :256:27*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :256:43*/(name); var _cgo2 _Ctype_int = /*line :256:51*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :256:63*/(options); _cgoCheckPointer(_cgo0, nil); /*line :256:73*/_Cfunc__PDF_create_fieldgroup(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// CreateGstate ...
func (p *PDFlib) CreateGstate(options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :262:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :262:50*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :262:60*/_Cfunc__PDF_create_gstate(_cgo0, _cgo1); }())
	return ret, p.catch()
}

// CreatePvf ...
func (p *PDFlib) CreatePvf(filename string, data []byte, options string) error {
	func() { _cgo0 := /*line :268:20*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :268:36*/(filename); var _cgo2 _Ctype_int = /*line :268:48*/0; _cgoIndex3 := &/*line :268:67*/data; _cgo3 := /*line :268:51*/unsafe.Pointer(&(*_cgoIndex3)[0]); var _cgo4 _Ctype_size_t = _Ctype_size_t /*line :268:85*/(len(data)); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :268:107*/(options); _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo3, *_cgoIndex3); /*line :268:117*/_Cfunc__PDF_create_pvf(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }()
	return p.catch()
}

// CreateTextflow ...
func (p *PDFlib) CreateTextflow(text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :274:36*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :274:52*/(text); var _cgo2 _Ctype_int = /*line :274:60*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :274:72*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :274:82*/_Cfunc__PDF_create_textflow(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// CurveTo ...
func (p *PDFlib) CurveTo(x1, y1, x2, y2, x3, y3 float64) error {
	func() { _cgo0 := /*line :280:17*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :280:32*/(x1); var _cgo2 _Ctype_double = _Ctype_double /*line :280:46*/(y1); var _cgo3 _Ctype_double = _Ctype_double /*line :280:60*/(x2); var _cgo4 _Ctype_double = _Ctype_double /*line :280:74*/(y2); var _cgo5 _Ctype_double = _Ctype_double /*line :280:88*/(x3); var _cgo6 _Ctype_double = _Ctype_double /*line :280:102*/(y3); _cgoCheckPointer(_cgo0, nil); /*line :280:107*/_Cfunc__PDF_curveto(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// DefineLayer ...
func (p *PDFlib) DefineLayer(name, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :286:33*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :286:49*/(name); var _cgo2 _Ctype_int = /*line :286:57*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :286:69*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :286:79*/_Cfunc__PDF_define_layer(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// Delete ...
func (p *PDFlib) Delete() {
	func() { _cgo0 := /*line :292:16*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :292:22*/_Cfunc__PDF_delete(_cgo0); }()
}

// DeletePath ...
func (p *PDFlib) DeletePath(path int) error {
	func() { _cgo0 := /*line :297:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :297:33*/(path); _cgoCheckPointer(_cgo0, nil); /*line :297:40*/_Cfunc__PDF_delete_path(_cgo0, _cgo1); }()
	return p.catch()
}

// DeletePvf ...
func (p *PDFlib) DeletePvf(filename string) error {
	func() _Ctype_int{ _cgo0 := /*line :303:20*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :303:36*/(filename); var _cgo2 _Ctype_int = /*line :303:48*/0; _cgoCheckPointer(_cgo0, nil); return /*line :303:50*/_Cfunc__PDF_delete_pvf(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// DeleteTable ...
func (p *PDFlib) DeleteTable(table int, options string) error {
	func() { _cgo0 := /*line :309:22*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :309:34*/(table); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :309:52*/(options); _cgoCheckPointer(_cgo0, nil); /*line :309:62*/_Cfunc__PDF_delete_table(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// DeleteTextflow ...
func (p *PDFlib) DeleteTextflow(textflow int) error {
	func() { _cgo0 := /*line :315:25*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :315:37*/(textflow); _cgoCheckPointer(_cgo0, nil); /*line :315:48*/_Cfunc__PDF_delete_textflow(_cgo0, _cgo1); }()
	return p.catch()
}

// DrawPath ...
func (p *PDFlib) DrawPath(path int, x, y float64, options string) error {
	func() { _cgo0 := /*line :321:19*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :321:31*/(path); var _cgo2 _Ctype_double = _Ctype_double /*line :321:47*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :321:60*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :321:74*/(options); _cgoCheckPointer(_cgo0, nil); /*line :321:84*/_Cfunc__PDF_draw_path(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// Ellipse ...
func (p *PDFlib) Ellipse(x, y, rx, ry float64) error {
	func() { _cgo0 := /*line :327:17*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :327:32*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :327:45*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :327:58*/(rx); var _cgo4 _Ctype_double = _Ctype_double /*line :327:72*/(ry); _cgoCheckPointer(_cgo0, nil); /*line :327:77*/_Cfunc__PDF_ellipse(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// EndDocument ...
func (p *PDFlib) EndDocument(options string) error {
	func() { _cgo0 := /*line :333:22*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :333:38*/(options); _cgoCheckPointer(_cgo0, nil); /*line :333:48*/_Cfunc__PDF_end_document(_cgo0, _cgo1); }()
	return p.catch()
}

// EndFont ...
func (p *PDFlib) EndFont() error {
	func() { _cgo0 := /*line :339:18*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :339:24*/_Cfunc__PDF_end_font(_cgo0); }()
	return p.catch()
}

// EndGlyph ...
func (p *PDFlib) EndGlyph() error {
	func() { _cgo0 := /*line :345:19*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :345:25*/_Cfunc__PDF_end_glyph(_cgo0); }()
	return p.catch()
}

// EndItem ...
func (p *PDFlib) EndItem(id int) error {
	func() { _cgo0 := /*line :351:18*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :351:30*/(id); _cgoCheckPointer(_cgo0, nil); /*line :351:35*/_Cfunc__PDF_end_item(_cgo0, _cgo1); }()
	return p.catch()
}

// EndLayer ...
func (p *PDFlib) EndLayer() error {
	func() { _cgo0 := /*line :357:19*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :357:25*/_Cfunc__PDF_end_layer(_cgo0); }()
	return p.catch()
}

// EndMc ...
func (p *PDFlib) EndMc() error {
	func() { _cgo0 := /*line :363:16*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :363:22*/_Cfunc__PDF_end_mc(_cgo0); }()
	return p.catch()
}

// EndPageExt ...
func (p *PDFlib) EndPageExt(options string) error {
	func() { _cgo0 := /*line :369:22*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :369:38*/(options); _cgoCheckPointer(_cgo0, nil); /*line :369:48*/_Cfunc__PDF_end_page_ext(_cgo0, _cgo1); }()
	return p.catch()
}

// EndPattern ...
func (p *PDFlib) EndPattern() error {
	func() { _cgo0 := /*line :375:21*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :375:27*/_Cfunc__PDF_end_pattern(_cgo0); }()
	return p.catch()
}

// EndTemplateExt ...
func (p *PDFlib) EndTemplateExt(w, h float64) error {
	func() { _cgo0 := /*line :381:26*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :381:41*/(w); var _cgo2 _Ctype_double = _Ctype_double /*line :381:54*/(h); _cgoCheckPointer(_cgo0, nil); /*line :381:58*/_Cfunc__PDF_end_template_ext(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// EndPath ...
func (p *PDFlib) EndPath() error {
	func() { _cgo0 := /*line :387:17*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :387:23*/_Cfunc__PDF_endpath(_cgo0); }()
	return p.catch()
}

// Fill ...
func (p *PDFlib) Fill() error {
	func() { _cgo0 := /*line :393:14*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :393:20*/_Cfunc__PDF_fill(_cgo0); }()
	return p.catch()
}

// FillImageblock ...
func (p *PDFlib) FillImageblock(page int, blockname string, image int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :399:36*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :399:48*/(page); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :399:65*/(blockname); var _cgo3 _Ctype_int = _Ctype_int /*line :399:83*/(image); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :399:101*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :399:111*/_Cfunc__PDF_fill_imageblock(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// FillPdfblock ...
func (p *PDFlib) FillPdfblock(page int, blockname string, content int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :405:34*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :405:46*/(page); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :405:63*/(blockname); var _cgo3 _Ctype_int = _Ctype_int /*line :405:81*/(content); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :405:101*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :405:111*/_Cfunc__PDF_fill_pdfblock(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// FillStroke ...
func (p *PDFlib) FillStroke() error {
	func() { _cgo0 := /*line :411:21*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :411:27*/_Cfunc__PDF_fill_stroke(_cgo0); }()
	return p.catch()
}

// FillTextblock ...
func (p *PDFlib) FillTextblock(page int, blockname, text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :417:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :417:47*/(page); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :417:64*/(blockname); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :417:86*/(text); var _cgo4 _Ctype_int = /*line :417:94*/0; var _cgo5 *_Ctype_char = _Cfunc_CString /*line :417:106*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :417:116*/_Cfunc__PDF_fill_textblock(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }())
	return ret, p.catch()
}

// FitGraphics places vector graphics on a content stream, subject to various options.
func (p *PDFlib) FitGraphics(graphics int, x, y float64, options string) error {
	func() { _cgo0 := /*line :423:22*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :423:34*/(graphics); var _cgo2 _Ctype_double = _Ctype_double /*line :423:54*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :423:67*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :423:81*/(options); _cgoCheckPointer(_cgo0, nil); /*line :423:91*/_Cfunc__PDF_fit_graphics(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// FitImage ...
func (p *PDFlib) FitImage(image int, x, y float64, options string) error {
	func() { _cgo0 := /*line :429:19*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :429:31*/(image); var _cgo2 _Ctype_double = _Ctype_double /*line :429:48*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :429:61*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :429:75*/(options); _cgoCheckPointer(_cgo0, nil); /*line :429:85*/_Cfunc__PDF_fit_image(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// FitPdiPage ...
func (p *PDFlib) FitPdiPage(page int, x, y float64, options string) error {
	func() { _cgo0 := /*line :435:22*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :435:34*/(page); var _cgo2 _Ctype_double = _Ctype_double /*line :435:50*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :435:63*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :435:77*/(options); _cgoCheckPointer(_cgo0, nil); /*line :435:87*/_Cfunc__PDF_fit_pdi_page(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// FitTable ...
func (p *PDFlib) FitTable(table int, llx, lly, urx, ury float64, options string) (string, error) {
	ret := ( /*line :441:9*/_Cfunc_GoString /*line :441:18*/)(func() *_Ctype_char{ _cgo0 := /*line :441:37*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :441:49*/(table); var _cgo2 _Ctype_double = _Ctype_double /*line :441:66*/(llx); var _cgo3 _Ctype_double = _Ctype_double /*line :441:81*/(lly); var _cgo4 _Ctype_double = _Ctype_double /*line :441:96*/(urx); var _cgo5 _Ctype_double = _Ctype_double /*line :441:111*/(ury); var _cgo6 *_Ctype_char = _Cfunc_CString /*line :441:127*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :441:137*/_Cfunc__PDF_fit_table(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }())
	return ret, p.catch()
}

// FitTextflow ...
func (p *PDFlib) FitTextflow(textflow int, llx, lly, urx, ury float64, options string) (string, error) {
	ret := ( /*line :447:9*/_Cfunc_GoString /*line :447:18*/)(func() *_Ctype_char{ _cgo0 := /*line :447:40*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :447:52*/(textflow); var _cgo2 _Ctype_double = _Ctype_double /*line :447:72*/(llx); var _cgo3 _Ctype_double = _Ctype_double /*line :447:87*/(lly); var _cgo4 _Ctype_double = _Ctype_double /*line :447:102*/(urx); var _cgo5 _Ctype_double = _Ctype_double /*line :447:117*/(ury); var _cgo6 *_Ctype_char = _Cfunc_CString /*line :447:133*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :447:143*/_Cfunc__PDF_fit_textflow(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }())
	return ret, p.catch()
}

// FitTextline ...
func (p *PDFlib) FitTextline(text string, x, y float64, options string) error {
	func() { _cgo0 := /*line :453:22*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :453:38*/(text); var _cgo2 _Ctype_int = /*line :453:46*/0; var _cgo3 _Ctype_double = _Ctype_double /*line :453:57*/(x); var _cgo4 _Ctype_double = _Ctype_double /*line :453:70*/(y); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :453:84*/(options); _cgoCheckPointer(_cgo0, nil); /*line :453:94*/_Cfunc__PDF_fit_textline(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }()
	return p.catch()
}

// GetBuffer ...
func (p *PDFlib) GetBuffer() ([]byte, int, error) {
	var size  /*line :459:11*/_Ctype_long /*line :459:17*/
	ret := []byte(( /*line :460:16*/_Cfunc_GoStringN /*line :460:26*/)(func() *_Ctype_char{ _cgo0 := /*line :460:45*/p.val; var _cgo1 *_Ctype_long = /*line :460:52*/&size; _cgoCheckPointer(_cgo0, nil); return /*line :460:58*/_Cfunc_PDF_get_buffer(_cgo0, _cgo1); }(),  /*line :460:60*/_Ctype_int /*line :460:65*/(size)))
	return ret, int(size), p.catch()
}

// GetParameter ...
func (p *PDFlib) GetParameter(key string, modifier float64) (string, error) {
	ret := ( /*line :466:9*/_Cfunc_GoString /*line :466:18*/)(func() *_Ctype_char{ _cgo0 := /*line :466:41*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :466:57*/(key); var _cgo2 _Ctype_double = _Ctype_double /*line :466:72*/(modifier); _cgoCheckPointer(_cgo0, nil); return /*line :466:83*/_Cfunc__PDF_get_parameter(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// GetValue ...
func (p *PDFlib) GetValue(key string, modifier float64) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :472:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :472:50*/(key); var _cgo2 _Ctype_double = _Ctype_double /*line :472:65*/(modifier); _cgoCheckPointer(_cgo0, nil); return /*line :472:76*/_Cfunc__PDF_get_value(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// InfoFont ...
func (p *PDFlib) InfoFont(font int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :478:34*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :478:46*/(font); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :478:63*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :478:83*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :478:93*/_Cfunc__PDF_info_font(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoGraphics formats vector graphics and query metrics and other properties.
func (p *PDFlib) InfoGraphics(graphics int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :484:38*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :484:50*/(graphics); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :484:71*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :484:91*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :484:101*/_Cfunc__PDF_info_graphics(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoImage ...
func (p *PDFlib) InfoImage(image int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :490:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :490:47*/(image); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :490:65*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :490:85*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :490:95*/_Cfunc__PDF_info_image(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoMatchbox ...
func (p *PDFlib) InfoMatchbox(boxname string, num int, keyword string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :496:38*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :496:54*/(boxname); var _cgo2 _Ctype_int = /*line :496:65*/0; var _cgo3 _Ctype_int = _Ctype_int /*line :496:73*/(num); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :496:89*/(keyword); _cgoCheckPointer(_cgo0, nil); return /*line :496:99*/_Cfunc__PDF_info_matchbox(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// InfoPath ...
func (p *PDFlib) InfoPath(path int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :502:34*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :502:46*/(path); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :502:63*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :502:83*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :502:93*/_Cfunc__PDF_info_path(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoPdiPage ...
func (p *PDFlib) InfoPdiPage(page int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :508:38*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :508:50*/(page); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :508:67*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :508:87*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :508:97*/_Cfunc__PDF_info_pdi_page(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoTable ...
func (p *PDFlib) InfoTable(table int, keyword string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :514:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :514:47*/(table); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :514:65*/(keyword); _cgoCheckPointer(_cgo0, nil); return /*line :514:75*/_Cfunc__PDF_info_table(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// InfoTextflow ...
func (p *PDFlib) InfoTextflow(textflow int, keyword string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :520:38*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :520:50*/(textflow); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :520:71*/(keyword); _cgoCheckPointer(_cgo0, nil); return /*line :520:81*/_Cfunc__PDF_info_textflow(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// InfoTextline ...
func (p *PDFlib) InfoTextline(text, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :526:38*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :526:54*/(text); var _cgo2 _Ctype_int = /*line :526:62*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :526:74*/(keyword); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :526:94*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :526:104*/_Cfunc__PDF_info_textline(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// InitGraphics ...
func (p *PDFlib) InitGraphics() error {
	func() { _cgo0 := /*line :532:22*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :532:28*/_Cfunc__PDF_initgraphics(_cgo0); }()
	return p.catch()
}

// LineTo ...
func (p *PDFlib) LineTo(x, y float64) error {
	func() { _cgo0 := /*line :538:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :538:31*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :538:44*/(y); _cgoCheckPointer(_cgo0, nil); /*line :538:48*/_Cfunc__PDF_lineto(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// Load3dData ...
func (p *PDFlib) Load3dData(filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :544:32*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :544:48*/(filename); var _cgo2 _Ctype_int = /*line :544:60*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :544:72*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :544:82*/_Cfunc__PDF_load_3ddata(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// LoadFont ...
func (p *PDFlib) LoadFont(fontname, encoding, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :550:30*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :550:46*/(fontname); var _cgo2 _Ctype_int = /*line :550:58*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :550:70*/(encoding); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :550:91*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :550:101*/_Cfunc__PDF_load_font(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// LoadGraphics opens a disk-based or virtual vector graphics file subject to various options
func (p *PDFlib) LoadGraphics(graphicstype, filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :556:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :556:50*/(graphicstype); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :556:75*/(filename); var _cgo3 _Ctype_int = /*line :556:87*/0; var _cgo4 *_Ctype_char = _Cfunc_CString /*line :556:99*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :556:109*/_Cfunc__PDF_load_graphics(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// LoadIccProfile ...
func (p *PDFlib) LoadIccProfile(profilename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :562:36*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :562:52*/(profilename); var _cgo2 _Ctype_int = /*line :562:67*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :562:79*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :562:89*/_Cfunc__PDF_load_iccprofile(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// LoadImage ...
func (p *PDFlib) LoadImage(imagetype, filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :568:31*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :568:47*/(imagetype); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :568:69*/(filename); var _cgo3 _Ctype_int = /*line :568:81*/0; var _cgo4 *_Ctype_char = _Cfunc_CString /*line :568:93*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :568:103*/_Cfunc__PDF_load_image(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// MakeSpotColor ...
func (p *PDFlib) MakeSpotColor(spotname string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :574:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :574:50*/(spotname); var _cgo2 _Ctype_int = /*line :574:62*/0; _cgoCheckPointer(_cgo0, nil); return /*line :574:64*/_Cfunc__PDF_makespotcolor(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// McPoint ...
func (p *PDFlib) McPoint(tag, options string) error {
	func() { _cgo0 := /*line :580:18*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :580:34*/(tag); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :580:50*/(options); _cgoCheckPointer(_cgo0, nil); /*line :580:60*/_Cfunc__PDF_mc_point(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// MoveTo ...
func (p *PDFlib) MoveTo(x, y float64) error {
	func() { _cgo0 := /*line :586:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :586:31*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :586:44*/(y); _cgoCheckPointer(_cgo0, nil); /*line :586:48*/_Cfunc__PDF_moveto(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// OpenPdiDocument ...
func (p *PDFlib) OpenPdiDocument(filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :592:38*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :592:54*/(filename); var _cgo2 _Ctype_int = /*line :592:66*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :592:78*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :592:88*/_Cfunc__PDF_open_pdi_document(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// OpenPdiPage ...
func (p *PDFlib) OpenPdiPage(doc, page int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :598:34*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :598:46*/(doc); var _cgo2 _Ctype_int = _Ctype_int /*line :598:58*/(page); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :598:75*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :598:85*/_Cfunc__PDF_open_pdi_page(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// PcosGetNumber ...
func (p *PDFlib) PcosGetNumber(doc int, path string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :604:40*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :604:52*/(doc); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :604:68*/(path); _cgoCheckPointer(_cgo0, nil); return /*line :604:75*/_Cfunc__PDF_pcos_get_number(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// PcosGetString ...
func (p *PDFlib) PcosGetString(doc int, path string) (string, error) {
	ret := string(( /*line :610:16*/_Cfunc_GoString /*line :610:25*/)(func() *_Ctype_char{ _cgo0 := /*line :610:50*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :610:62*/(doc); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :610:78*/(path); _cgoCheckPointer(_cgo0, nil); return /*line :610:85*/_Cfunc__PDF_pcos_get_string(_cgo0, _cgo1, _cgo2); }()))
	return ret, p.catch()
}

// PcosGetStream ...
func (p *PDFlib) PcosGetStream(doc int, options, path string) (string, error) {
	ret := "" // string(C.GoString(C._PDF_pcos_get_stream(p.val, C.int(doc), 0, C.CString(options), C.CString(path))))
	return ret, p.catch()
}

// PocaDelete ...
func (p *PDFlib) PocaDelete(container int, options string) error {
	func() { _cgo0 := /*line :622:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :622:33*/(container); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :622:55*/(options); _cgoCheckPointer(_cgo0, nil); /*line :622:65*/_Cfunc__PDF_poca_delete(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// PocaInsert ...
func (p *PDFlib) PocaInsert(container int, options string) error {
	func() { _cgo0 := /*line :628:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :628:33*/(container); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :628:55*/(options); _cgoCheckPointer(_cgo0, nil); /*line :628:65*/_Cfunc__PDF_poca_insert(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// PocaNew ...
func (p *PDFlib) PocaNew(options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :634:29*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :634:45*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :634:55*/_Cfunc__PDF_poca_new(_cgo0, _cgo1); }())
	return ret, p.catch()
}

// PocaRemove ...
func (p *PDFlib) PocaRemove(container int, options string) error {
	func() { _cgo0 := /*line :640:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :640:33*/(container); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :640:55*/(options); _cgoCheckPointer(_cgo0, nil); /*line :640:65*/_Cfunc__PDF_poca_remove(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// ProcessPdi ...
func (p *PDFlib) ProcessPdi(doc, page int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :646:32*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :646:44*/(doc); var _cgo2 _Ctype_int = _Ctype_int /*line :646:56*/(page); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :646:73*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :646:83*/_Cfunc__PDF_process_pdi(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// RCurveTo ...
func (p *PDFlib) RCurveTo(x1, y1, x2, y2, x3, y3 float64) error {
	func() { _cgo0 := /*line :652:18*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :652:33*/(x1); var _cgo2 _Ctype_double = _Ctype_double /*line :652:47*/(x1); var _cgo3 _Ctype_double = _Ctype_double /*line :652:61*/(y1); var _cgo4 _Ctype_double = _Ctype_double /*line :652:75*/(x2); var _cgo5 _Ctype_double = _Ctype_double /*line :652:89*/(y2); var _cgo6 _Ctype_double = _Ctype_double /*line :652:103*/(y3); _cgoCheckPointer(_cgo0, nil); /*line :652:108*/_Cfunc__PDF_rcurveto(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// Rect ...
func (p *PDFlib) Rect(x, y, w, h float64) error {
	func() { _cgo0 := /*line :658:14*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :658:29*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :658:42*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :658:55*/(w); var _cgo4 _Ctype_double = _Ctype_double /*line :658:68*/(h); _cgoCheckPointer(_cgo0, nil); /*line :658:72*/_Cfunc__PDF_rect(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// Restore ...
func (p *PDFlib) Restore() error {
	func() { _cgo0 := /*line :664:17*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :664:23*/_Cfunc__PDF_restore(_cgo0); }()
	return p.catch()
}

// ResumePage ...
func (p *PDFlib) ResumePage(options string) error {
	func() { _cgo0 := /*line :670:21*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :670:37*/(options); _cgoCheckPointer(_cgo0, nil); /*line :670:47*/_Cfunc__PDF_resume_page(_cgo0, _cgo1); }()
	return p.catch()
}

// Rotate ...
func (p *PDFlib) Rotate(phi float64) error {
	func() { _cgo0 := /*line :676:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :676:31*/(phi); _cgoCheckPointer(_cgo0, nil); /*line :676:37*/_Cfunc__PDF_rotate(_cgo0, _cgo1); }()
	return p.catch()
}

// Save ...
func (p *PDFlib) Save() error {
	func() { _cgo0 := /*line :682:14*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :682:20*/_Cfunc__PDF_save(_cgo0); }()
	return p.catch()
}

// Scale ...
func (p *PDFlib) Scale(sx, sy float64) error {
	func() { _cgo0 := /*line :688:15*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :688:30*/(sx); var _cgo2 _Ctype_double = _Ctype_double /*line :688:44*/(sy); _cgoCheckPointer(_cgo0, nil); /*line :688:49*/_Cfunc__PDF_scale(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetGraphicsOption sets one or more graphics appearance options.
func (p *PDFlib) SetGraphicsOption(options string) error {
	func() { _cgo0 := /*line :694:29*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :694:45*/(options); _cgoCheckPointer(_cgo0, nil); /*line :694:55*/_Cfunc__PDF_set_graphics_option(_cgo0, _cgo1); }()
	return p.catch()
}

// SetGstate ...
func (p *PDFlib) SetGstate(gstate int) error {
	func() { _cgo0 := /*line :700:20*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :700:32*/(gstate); _cgoCheckPointer(_cgo0, nil); /*line :700:41*/_Cfunc__PDF_set_gstate(_cgo0, _cgo1); }()
	return p.catch()
}

// SetInfo ...
func (p *PDFlib) SetInfo(key, value string) error {
	func() { _cgo0 := /*line :706:18*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :706:34*/(key); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :706:50*/(value); _cgoCheckPointer(_cgo0, nil); /*line :706:58*/_Cfunc__PDF_set_info(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetLayerDependency ...
func (p *PDFlib) SetLayerDependency(kind, options string) error {
	func() { _cgo0 := /*line :712:30*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :712:46*/(kind); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :712:63*/(options); _cgoCheckPointer(_cgo0, nil); /*line :712:73*/_Cfunc__PDF_set_layer_dependency(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetOption ...
func (p *PDFlib) SetOption(options string) error {
	func() { _cgo0 := /*line :718:20*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :718:36*/(options); _cgoCheckPointer(_cgo0, nil); /*line :718:46*/_Cfunc__PDF_set_option(_cgo0, _cgo1); }()
	return p.catch()
}

// SetParameter ...
func (p *PDFlib) SetParameter(key, value string) error {
	func() { _cgo0 := /*line :724:23*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :724:39*/(key); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :724:55*/(value); _cgoCheckPointer(_cgo0, nil); /*line :724:63*/_Cfunc__PDF_set_parameter(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetTextPos ...
func (p *PDFlib) SetTextPos(x, y float64) error {
	func() { _cgo0 := /*line :730:22*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :730:37*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :730:50*/(y); _cgoCheckPointer(_cgo0, nil); /*line :730:54*/_Cfunc__PDF_set_text_pos(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetValue ...
func (p *PDFlib) SetValue(key string, value float64) error {
	func() { _cgo0 := /*line :736:19*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :736:35*/(key); var _cgo2 _Ctype_double = _Ctype_double /*line :736:50*/(value); _cgoCheckPointer(_cgo0, nil); /*line :736:58*/_Cfunc__PDF_set_value(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetColor ...
func (p *PDFlib) SetColor(fstype, colorspace string, c1, c2, c3, c4 float64) error {
	func() { _cgo0 := /*line :742:18*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :742:34*/(fstype); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :742:53*/(colorspace); var _cgo3 _Ctype_double = _Ctype_double /*line :742:75*/(c1); var _cgo4 _Ctype_double = _Ctype_double /*line :742:89*/(c2); var _cgo5 _Ctype_double = _Ctype_double /*line :742:103*/(c3); var _cgo6 _Ctype_double = _Ctype_double /*line :742:117*/(c4); _cgoCheckPointer(_cgo0, nil); /*line :742:122*/_Cfunc__PDF_setcolor(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// SetDash ...
func (p *PDFlib) SetDash(b, w float64) error {
	func() { _cgo0 := /*line :748:17*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :748:32*/(b); var _cgo2 _Ctype_double = _Ctype_double /*line :748:45*/(w); _cgoCheckPointer(_cgo0, nil); /*line :748:49*/_Cfunc__PDF_setdash(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetDashPattern ...
func (p *PDFlib) SetDashPattern(options string) error {
	func() { _cgo0 := /*line :754:24*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :754:40*/(options); _cgoCheckPointer(_cgo0, nil); /*line :754:50*/_Cfunc__PDF_setdashpattern(_cgo0, _cgo1); }()
	return p.catch()
}

// SetFlat ...
func (p *PDFlib) SetFlat(flatness float64) error {
	func() { _cgo0 := /*line :760:17*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :760:32*/(flatness); _cgoCheckPointer(_cgo0, nil); /*line :760:43*/_Cfunc__PDF_setflat(_cgo0, _cgo1); }()
	return p.catch()
}

// SetFont ...
func (p *PDFlib) SetFont(font int, fontsize float64) error {
	func() { _cgo0 := /*line :766:17*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :766:29*/(font); var _cgo2 _Ctype_double = _Ctype_double /*line :766:45*/(fontsize); _cgoCheckPointer(_cgo0, nil); /*line :766:56*/_Cfunc__PDF_setfont(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetLinecap ...
func (p *PDFlib) SetLinecap(linecap int) error {
	func() { _cgo0 := /*line :772:20*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :772:32*/(linecap); _cgoCheckPointer(_cgo0, nil); /*line :772:42*/_Cfunc__PDF_setlinecap(_cgo0, _cgo1); }()
	return p.catch()
}

// SetLinejoin ...
func (p *PDFlib) SetLinejoin(linejoin int) error {
	func() { _cgo0 := /*line :778:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :778:33*/(linejoin); _cgoCheckPointer(_cgo0, nil); /*line :778:44*/_Cfunc__PDF_setlinejoin(_cgo0, _cgo1); }()
	return p.catch()
}

// SetLinewidth ...
func (p *PDFlib) SetLinewidth(width float64) error {
	func() { _cgo0 := /*line :784:22*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :784:37*/(width); _cgoCheckPointer(_cgo0, nil); /*line :784:45*/_Cfunc__PDF_setlinewidth(_cgo0, _cgo1); }()
	return p.catch()
}

// SetMatrix ...
func (p *PDFlib) SetMatrix(a, b, c, d, e, f float64) error {
	func() { _cgo0 := /*line :790:19*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :790:34*/(a); var _cgo2 _Ctype_double = _Ctype_double /*line :790:47*/(b); var _cgo3 _Ctype_double = _Ctype_double /*line :790:60*/(c); var _cgo4 _Ctype_double = _Ctype_double /*line :790:73*/(d); var _cgo5 _Ctype_double = _Ctype_double /*line :790:86*/(e); var _cgo6 _Ctype_double = _Ctype_double /*line :790:99*/(f); _cgoCheckPointer(_cgo0, nil); /*line :790:103*/_Cfunc__PDF_setmatrix(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// SetMiterLimit ...
func (p *PDFlib) SetMiterLimit(miter float64) error {
	func() { _cgo0 := /*line :796:23*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :796:38*/(miter); _cgoCheckPointer(_cgo0, nil); /*line :796:46*/_Cfunc__PDF_setmiterlimit(_cgo0, _cgo1); }()
	return p.catch()
}

// Shading ...
func (p *PDFlib) Shading(shtype string, x0, y0, x1, y1, c1, c2, c3, c4 float64, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :802:28*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :802:44*/(shtype); var _cgo2 _Ctype_double = _Ctype_double /*line :802:62*/(x0); var _cgo3 _Ctype_double = _Ctype_double /*line :802:76*/(y0); var _cgo4 _Ctype_double = _Ctype_double /*line :802:90*/(x1); var _cgo5 _Ctype_double = _Ctype_double /*line :802:104*/(y1); var _cgo6 _Ctype_double = _Ctype_double /*line :802:118*/(c1); var _cgo7 _Ctype_double = _Ctype_double /*line :802:132*/(c2); var _cgo8 _Ctype_double = _Ctype_double /*line :802:146*/(c3); var _cgo9 _Ctype_double = _Ctype_double /*line :802:160*/(c4); var _cgo10 *_Ctype_char = _Cfunc_CString /*line :802:175*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :802:185*/_Cfunc__PDF_shading(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6, _cgo7, _cgo8, _cgo9, _cgo10); }())
	return ret, p.catch()
}

// ShadingPattern ...
func (p *PDFlib) ShadingPattern(shading int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :808:36*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :808:48*/(shading); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :808:68*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :808:78*/_Cfunc__PDF_shading_pattern(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// Shfill ...
func (p *PDFlib) Shfill(shading int) error {
	func() { _cgo0 := /*line :814:16*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :814:28*/(shading); _cgoCheckPointer(_cgo0, nil); /*line :814:38*/_Cfunc__PDF_shfill(_cgo0, _cgo1); }()
	return p.catch()
}

// Show ...
func (p *PDFlib) Show(text string) error {
	func() { _cgo0 := /*line :820:14*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :820:30*/(text); _cgoCheckPointer(_cgo0, nil); /*line :820:37*/_Cfunc__PDF_show(_cgo0, _cgo1); }()
	return p.catch()
}

// ShowXY ...
func (p *PDFlib) ShowXY(text string, x, y float64) error {
	func() { _cgo0 := /*line :826:17*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :826:33*/(text); var _cgo2 _Ctype_double = _Ctype_double /*line :826:49*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :826:62*/(y); _cgoCheckPointer(_cgo0, nil); /*line :826:66*/_Cfunc__PDF_show_xy(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// Skew ...
func (p *PDFlib) Skew(alpha, beta float64) error {
	func() { _cgo0 := /*line :832:14*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :832:29*/(alpha); var _cgo2 _Ctype_double = _Ctype_double /*line :832:46*/(beta); _cgoCheckPointer(_cgo0, nil); /*line :832:53*/_Cfunc__PDF_skew(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// StringWidth ...
func (p *PDFlib) StringWidth(text string, font int, fontsize float64) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :838:36*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :838:52*/(text); var _cgo2 _Ctype_int = _Ctype_int /*line :838:65*/(font); var _cgo3 _Ctype_double = _Ctype_double /*line :838:81*/(fontsize); _cgoCheckPointer(_cgo0, nil); return /*line :838:92*/_Cfunc__PDF_stringwidth(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// Stroke ...
func (p *PDFlib) Stroke() error {
	func() { _cgo0 := /*line :844:16*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :844:22*/_Cfunc__PDF_stroke(_cgo0); }()
	return p.catch()
}

// SuspendPage ...
func (p *PDFlib) SuspendPage(options string) error {
	func() { _cgo0 := /*line :850:22*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :850:38*/(options); _cgoCheckPointer(_cgo0, nil); /*line :850:48*/_Cfunc__PDF_suspend_page(_cgo0, _cgo1); }()
	return p.catch()
}

// Translate ...
func (p *PDFlib) Translate(tx, ty float64) error {
	func() { _cgo0 := /*line :856:19*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :856:34*/(tx); var _cgo2 _Ctype_double = _Ctype_double /*line :856:48*/(ty); _cgoCheckPointer(_cgo0, nil); /*line :856:53*/_Cfunc__PDF_translate(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}
