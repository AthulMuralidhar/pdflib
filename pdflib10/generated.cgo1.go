// Code generated by cmd/cgo; DO NOT EDIT.

//line /home/athul/pdflib/pdflib10/generated.go:1:1
// Copyright Â© 2016 Abcum Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this info except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +build cgo

package pdflib

// #include <stdio.h>
// #include <stdlib.h>
// #include "golang.h"
// #include "pdflib.h"
import _ "unsafe"
import "errors"
import "unsafe"

// PDFlib represents a PDFlib instance.
type PDFlib struct {
	val * /*line :29:7*/_Ctype_PDF /*line :29:12*/
}

// New creates a new PDFlb instance.
func New() *PDFlib {
	pdflib := &PDFlib{val: ( /*line :34:25*/_Cfunc_PDF_new /*line :34:33*/)()}
	pdflib.SetParameter("errorpolicy", "exception")
	return pdflib
}

func (p *PDFlib) catch() error {
	if num := func() _Ctype_int{ _cgo0 := /*line :40:30*/p.val; _cgoCheckPointer(_cgo0, nil); return /*line :40:36*/_Cfunc__PDF_get_errnum(_cgo0); }(); num > 0 {
		return errors.New(( /*line :41:21*/_Cfunc_GoString /*line :41:30*/)(func() *_Ctype_char{ _cgo0 := /*line :41:50*/p.val; _cgoCheckPointer(_cgo0, nil); return /*line :41:56*/_Cfunc__PDF_get_errmsg(_cgo0); }()))
	}
	return nil
}

// AddNamedDest ...
func (p *PDFlib) AddNamedDest(name, options string) error {
	func() { _cgo0 := /*line :48:23*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :48:39*/(name); var _cgo2 _Ctype_int = /*line :48:47*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :48:59*/(options); _cgoCheckPointer(_cgo0, nil); /*line :48:69*/_Cfunc__PDF_add_nameddest(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// AddPathPoint ...
func (p *PDFlib) AddPathPoint(path int, x, y float64, kind, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :54:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :54:47*/(path); var _cgo2 _Ctype_double = _Ctype_double /*line :54:63*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :54:76*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :54:90*/(kind); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :54:107*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :54:117*/_Cfunc__PDF_add_path_point(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }())
	return ret, p.catch()
}

// AddTableCell ...
func (p *PDFlib) AddTableCell(table, col, row int, text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :60:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :60:47*/(table); var _cgo2 _Ctype_int = _Ctype_int /*line :60:61*/(col); var _cgo3 _Ctype_int = _Ctype_int /*line :60:73*/(row); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :60:89*/(text); var _cgo5 _Ctype_int = /*line :60:97*/0; var _cgo6 *_Ctype_char = _Cfunc_CString /*line :60:109*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :60:119*/_Cfunc__PDF_add_table_cell(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }())
	return ret, p.catch()
}

// AddTextflow ...
func (p *PDFlib) AddTextflow(textflow int, text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :66:33*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :66:45*/(textflow); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :66:66*/(text); var _cgo3 _Ctype_int = /*line :66:74*/0; var _cgo4 *_Ctype_char = _Cfunc_CString /*line :66:86*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :66:96*/_Cfunc__PDF_add_textflow(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// AddThumbnail ...
func (p *PDFlib) AddThumbnail(image int) error {
	func() { _cgo0 := /*line :72:23*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :72:35*/(image); _cgoCheckPointer(_cgo0, nil); /*line :72:43*/_Cfunc__PDF_add_thumbnail(_cgo0, _cgo1); }()
	return p.catch()
}

// Align ...
func (p *PDFlib) Align(x, y float64) error {
	func() { _cgo0 := /*line :78:15*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :78:30*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :78:43*/(y); _cgoCheckPointer(_cgo0, nil); /*line :78:47*/_Cfunc__PDF_align(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// Arc ...
func (p *PDFlib) Arc(x, y, r, alpha, beta float64) error {
	func() { _cgo0 := /*line :84:13*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :84:28*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :84:41*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :84:54*/(r); var _cgo4 _Ctype_double = _Ctype_double /*line :84:67*/(alpha); var _cgo5 _Ctype_double = _Ctype_double /*line :84:84*/(beta); _cgoCheckPointer(_cgo0, nil); /*line :84:91*/_Cfunc__PDF_arc(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }()
	return p.catch()
}

// Arcn ...
func (p *PDFlib) Arcn(x, y, r, alpha, beta float64) error {
	func() { _cgo0 := /*line :90:14*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :90:29*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :90:42*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :90:55*/(r); var _cgo4 _Ctype_double = _Ctype_double /*line :90:68*/(alpha); var _cgo5 _Ctype_double = _Ctype_double /*line :90:85*/(beta); _cgoCheckPointer(_cgo0, nil); /*line :90:92*/_Cfunc__PDF_arcn(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }()
	return p.catch()
}

// BeginDocument ...
func (p *PDFlib) BeginDocument(filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :96:35*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :96:51*/(filename); var _cgo2 _Ctype_int = /*line :96:63*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :96:75*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :96:85*/_Cfunc__PDF_begin_document(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// BeginFont ...
func (p *PDFlib) BeginFont(fontname string, a, b, c, d, e, f float64, options string) error {
	func() { _cgo0 := /*line :102:20*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :102:36*/(fontname); var _cgo2 _Ctype_int = /*line :102:48*/0; var _cgo3 _Ctype_double = _Ctype_double /*line :102:59*/(a); var _cgo4 _Ctype_double = _Ctype_double /*line :102:72*/(b); var _cgo5 _Ctype_double = _Ctype_double /*line :102:85*/(c); var _cgo6 _Ctype_double = _Ctype_double /*line :102:98*/(d); var _cgo7 _Ctype_double = _Ctype_double /*line :102:111*/(e); var _cgo8 _Ctype_double = _Ctype_double /*line :102:124*/(f); var _cgo9 *_Ctype_char = _Cfunc_CString /*line :102:138*/(options); _cgoCheckPointer(_cgo0, nil); /*line :102:148*/_Cfunc__PDF_begin_font(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6, _cgo7, _cgo8, _cgo9); }()
	return p.catch()
}

// BeginGlyph ...
func (p *PDFlib) BeginGlyph(glyphname string, wx, llx, lly, urx, ury float64) error {
	func() { _cgo0 := /*line :108:21*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :108:37*/(glyphname); var _cgo2 _Ctype_double = _Ctype_double /*line :108:58*/(wx); var _cgo3 _Ctype_double = _Ctype_double /*line :108:72*/(llx); var _cgo4 _Ctype_double = _Ctype_double /*line :108:87*/(lly); var _cgo5 _Ctype_double = _Ctype_double /*line :108:102*/(urx); var _cgo6 _Ctype_double = _Ctype_double /*line :108:117*/(ury); _cgoCheckPointer(_cgo0, nil); /*line :108:123*/_Cfunc__PDF_begin_glyph(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// BeginItem ..
func (p *PDFlib) BeginItem(tag, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :114:31*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :114:47*/(tag); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :114:63*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :114:73*/_Cfunc__PDF_begin_item(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// BeginLayer ..
func (p *PDFlib) BeginLayer(layer int) error {
	func() { _cgo0 := /*line :120:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :120:33*/(layer); _cgoCheckPointer(_cgo0, nil); /*line :120:41*/_Cfunc__PDF_begin_layer(_cgo0, _cgo1); }()
	return p.catch()
}

// BeginPageExt adds a new page to the document, and specify various options.
func (p *PDFlib) BeginPageExt(w, h float64, options string) error {
	func() { _cgo0 := /*line :126:24*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :126:39*/(w); var _cgo2 _Ctype_double = _Ctype_double /*line :126:52*/(h); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :126:66*/(options); _cgoCheckPointer(_cgo0, nil); /*line :126:76*/_Cfunc__PDF_begin_page_ext(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// BeginPattern ..
func (p *PDFlib) BeginPattern(w, h, xstep, ystep float64, painttype int) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :132:34*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :132:49*/(w); var _cgo2 _Ctype_double = _Ctype_double /*line :132:62*/(h); var _cgo3 _Ctype_double = _Ctype_double /*line :132:75*/(xstep); var _cgo4 _Ctype_double = _Ctype_double /*line :132:92*/(ystep); var _cgo5 _Ctype_int = _Ctype_int /*line :132:106*/(painttype); _cgoCheckPointer(_cgo0, nil); return /*line :132:118*/_Cfunc__PDF_begin_pattern(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }())
	return ret, p.catch()
}

// BeginTemplate ...
func (p *PDFlib) BeginTemplate(w, h float64, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :138:39*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :138:54*/(w); var _cgo2 _Ctype_double = _Ctype_double /*line :138:67*/(h); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :138:81*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :138:91*/_Cfunc__PDF_begin_template_ext(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// Circle ...
func (p *PDFlib) Circle(x, y, r float64) error {
	func() { _cgo0 := /*line :144:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :144:31*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :144:44*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :144:57*/(r); _cgoCheckPointer(_cgo0, nil); /*line :144:61*/_Cfunc__PDF_circle(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// CircularArc ...
func (p *PDFlib) CircularArc(x1, y1, x2, y2 float64) error {
	func() { _cgo0 := /*line :150:22*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :150:37*/(x1); var _cgo2 _Ctype_double = _Ctype_double /*line :150:51*/(y1); var _cgo3 _Ctype_double = _Ctype_double /*line :150:65*/(x2); var _cgo4 _Ctype_double = _Ctype_double /*line :150:79*/(y2); _cgoCheckPointer(_cgo0, nil); /*line :150:84*/_Cfunc__PDF_circular_arc(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// Clip ...
func (p *PDFlib) Clip() error {
	func() { _cgo0 := /*line :156:14*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :156:20*/_Cfunc__PDF_clip(_cgo0); }()
	return p.catch()
}

// CloseFont closes an open font handle which has not yet been used in the document.
func (p *PDFlib) CloseFont(font int) error {
	func() { _cgo0 := /*line :162:20*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :162:32*/(font); _cgoCheckPointer(_cgo0, nil); /*line :162:39*/_Cfunc__PDF_close_font(_cgo0, _cgo1); }()
	return p.catch()
}

// CloseGraphics closes vector graphics.
func (p *PDFlib) CloseGraphics(graphics int) error {
	func() { _cgo0 := /*line :168:24*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :168:36*/(graphics); _cgoCheckPointer(_cgo0, nil); /*line :168:47*/_Cfunc__PDF_close_graphics(_cgo0, _cgo1); }()
	return p.catch()
}

// CloseImage closes an image ...
func (p *PDFlib) CloseImage(image int) error {
	func() { _cgo0 := /*line :174:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :174:33*/(image); _cgoCheckPointer(_cgo0, nil); /*line :174:41*/_Cfunc__PDF_close_image(_cgo0, _cgo1); }()
	return p.catch()
}

// ClosePdiDocument ...
func (p *PDFlib) ClosePdiDocument(doc int) error {
	func() { _cgo0 := /*line :180:28*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :180:40*/(doc); _cgoCheckPointer(_cgo0, nil); /*line :180:46*/_Cfunc__PDF_close_pdi_document(_cgo0, _cgo1); }()
	return p.catch()
}

// ClosePdiPage ...
func (p *PDFlib) ClosePdiPage(page int) error {
	func() { _cgo0 := /*line :186:24*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :186:36*/(page); _cgoCheckPointer(_cgo0, nil); /*line :186:43*/_Cfunc__PDF_close_pdi_page(_cgo0, _cgo1); }()
	return p.catch()
}

// ClosePath ...
func (p *PDFlib) ClosePath() error {
	func() { _cgo0 := /*line :192:19*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :192:25*/_Cfunc__PDF_closepath(_cgo0); }()
	return p.catch()
}

// ClosePathFillStroke ...
func (p *PDFlib) ClosePathFillStroke() error {
	func() { _cgo0 := /*line :198:31*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :198:37*/_Cfunc__PDF_closepath_fill_stroke(_cgo0); }()
	return p.catch()
}

// ClosePathStroke ...
func (p *PDFlib) ClosePathStroke() error {
	func() { _cgo0 := /*line :204:26*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :204:32*/_Cfunc__PDF_closepath_stroke(_cgo0); }()
	return p.catch()
}

// Concat ...
func (p *PDFlib) Concat(a, b, c, d, e, f float64) error {
	func() { _cgo0 := /*line :210:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :210:31*/(a); var _cgo2 _Ctype_double = _Ctype_double /*line :210:44*/(b); var _cgo3 _Ctype_double = _Ctype_double /*line :210:57*/(c); var _cgo4 _Ctype_double = _Ctype_double /*line :210:70*/(d); var _cgo5 _Ctype_double = _Ctype_double /*line :210:83*/(e); var _cgo6 _Ctype_double = _Ctype_double /*line :210:96*/(f); _cgoCheckPointer(_cgo0, nil); /*line :210:100*/_Cfunc__PDF_concat(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// ContinueText ...
func (p *PDFlib) ContinueText(text string) error {
	func() { _cgo0 := /*line :216:23*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :216:39*/(text); _cgoCheckPointer(_cgo0, nil); /*line :216:46*/_Cfunc__PDF_continue_text(_cgo0, _cgo1); }()
	return p.catch()
}

// Create3dView ...
func (p *PDFlib) Create3dView(username, options string) error {
	func() _Ctype_int{ _cgo0 := /*line :222:23*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :222:39*/(username); var _cgo2 _Ctype_int = /*line :222:51*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :222:63*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :222:73*/_Cfunc__PDF_create_3dview(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// CreateAction ...
func (p *PDFlib) CreateAction(kind, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :228:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :228:50*/(kind); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :228:67*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :228:77*/_Cfunc__PDF_create_action(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// CreateAnnotation ...
func (p *PDFlib) CreateAnnotation(llx, llr, urx, ury float64, kind, options string) error {
	func() { _cgo0 := /*line :234:27*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :234:42*/(llx); var _cgo2 _Ctype_double = _Ctype_double /*line :234:57*/(llr); var _cgo3 _Ctype_double = _Ctype_double /*line :234:72*/(urx); var _cgo4 _Ctype_double = _Ctype_double /*line :234:87*/(ury); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :234:103*/(kind); var _cgo6 *_Ctype_char = _Cfunc_CString /*line :234:120*/(options); _cgoCheckPointer(_cgo0, nil); /*line :234:130*/_Cfunc__PDF_create_annotation(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// CreateBookmark ...
func (p *PDFlib) CreateBookmark(text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :240:36*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :240:52*/(text); var _cgo2 _Ctype_int = /*line :240:60*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :240:72*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :240:82*/_Cfunc__PDF_create_bookmark(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// CreateField ...
func (p *PDFlib) CreateField(llx, lly, urx, ury float64, name, kind, options string) error {
	func() { _cgo0 := /*line :246:22*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :246:37*/(llx); var _cgo2 _Ctype_double = _Ctype_double /*line :246:52*/(lly); var _cgo3 _Ctype_double = _Ctype_double /*line :246:67*/(urx); var _cgo4 _Ctype_double = _Ctype_double /*line :246:82*/(ury); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :246:98*/(name); var _cgo6 _Ctype_int = /*line :246:106*/0; var _cgo7 *_Ctype_char = _Cfunc_CString /*line :246:118*/(kind); var _cgo8 *_Ctype_char = _Cfunc_CString /*line :246:135*/(options); _cgoCheckPointer(_cgo0, nil); /*line :246:145*/_Cfunc__PDF_create_field(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6, _cgo7, _cgo8); }()
	return p.catch()
}

// CreateFieldgroup ...
func (p *PDFlib) CreateFieldgroup(name, options string) error {
	func() { _cgo0 := /*line :252:27*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :252:43*/(name); var _cgo2 _Ctype_int = /*line :252:51*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :252:63*/(options); _cgoCheckPointer(_cgo0, nil); /*line :252:73*/_Cfunc__PDF_create_fieldgroup(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// CreateGstate ...
func (p *PDFlib) CreateGstate(options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :258:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :258:50*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :258:60*/_Cfunc__PDF_create_gstate(_cgo0, _cgo1); }())
	return ret, p.catch()
}

// CreatePvf ...
func (p *PDFlib) CreatePvf(filename string, data []byte, options string) error {
	func() { _cgo0 := /*line :264:20*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :264:36*/(filename); var _cgo2 _Ctype_int = /*line :264:48*/0; _cgoIndex3 := &/*line :264:67*/data; _cgo3 := /*line :264:51*/unsafe.Pointer(&(*_cgoIndex3)[0]); var _cgo4 _Ctype_size_t = _Ctype_size_t /*line :264:85*/(len(data)); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :264:107*/(options); _cgoCheckPointer(_cgo0, nil); _cgoCheckPointer(_cgo3, *_cgoIndex3); /*line :264:117*/_Cfunc__PDF_create_pvf(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }()
	return p.catch()
}

// CreateTextflow ...
func (p *PDFlib) CreateTextflow(text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :270:36*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :270:52*/(text); var _cgo2 _Ctype_int = /*line :270:60*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :270:72*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :270:82*/_Cfunc__PDF_create_textflow(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// CurveTo ...
func (p *PDFlib) CurveTo(x1, y1, x2, y2, x3, y3 float64) error {
	func() { _cgo0 := /*line :276:17*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :276:32*/(x1); var _cgo2 _Ctype_double = _Ctype_double /*line :276:46*/(y1); var _cgo3 _Ctype_double = _Ctype_double /*line :276:60*/(x2); var _cgo4 _Ctype_double = _Ctype_double /*line :276:74*/(y2); var _cgo5 _Ctype_double = _Ctype_double /*line :276:88*/(x3); var _cgo6 _Ctype_double = _Ctype_double /*line :276:102*/(y3); _cgoCheckPointer(_cgo0, nil); /*line :276:107*/_Cfunc__PDF_curveto(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// DefineLayer ...
func (p *PDFlib) DefineLayer(name, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :282:33*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :282:49*/(name); var _cgo2 _Ctype_int = /*line :282:57*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :282:69*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :282:79*/_Cfunc__PDF_define_layer(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// Delete ...
func (p *PDFlib) Delete() {
	func() { _cgo0 := /*line :288:16*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :288:22*/_Cfunc__PDF_delete(_cgo0); }()
}

// DeletePath ...
func (p *PDFlib) DeletePath(path int) error {
	func() { _cgo0 := /*line :293:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :293:33*/(path); _cgoCheckPointer(_cgo0, nil); /*line :293:40*/_Cfunc__PDF_delete_path(_cgo0, _cgo1); }()
	return p.catch()
}

// DeletePvf ...
func (p *PDFlib) DeletePvf(filename string) error {
	func() _Ctype_int{ _cgo0 := /*line :299:20*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :299:36*/(filename); var _cgo2 _Ctype_int = /*line :299:48*/0; _cgoCheckPointer(_cgo0, nil); return /*line :299:50*/_Cfunc__PDF_delete_pvf(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// DeleteTable ...
func (p *PDFlib) DeleteTable(table int, options string) error {
	func() { _cgo0 := /*line :305:22*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :305:34*/(table); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :305:52*/(options); _cgoCheckPointer(_cgo0, nil); /*line :305:62*/_Cfunc__PDF_delete_table(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// DeleteTextflow ...
func (p *PDFlib) DeleteTextflow(textflow int) error {
	func() { _cgo0 := /*line :311:25*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :311:37*/(textflow); _cgoCheckPointer(_cgo0, nil); /*line :311:48*/_Cfunc__PDF_delete_textflow(_cgo0, _cgo1); }()
	return p.catch()
}

// DrawPath ...
func (p *PDFlib) DrawPath(path int, x, y float64, options string) error {
	func() { _cgo0 := /*line :317:19*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :317:31*/(path); var _cgo2 _Ctype_double = _Ctype_double /*line :317:47*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :317:60*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :317:74*/(options); _cgoCheckPointer(_cgo0, nil); /*line :317:84*/_Cfunc__PDF_draw_path(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// Ellipse ...
func (p *PDFlib) Ellipse(x, y, rx, ry float64) error {
	func() { _cgo0 := /*line :323:17*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :323:32*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :323:45*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :323:58*/(rx); var _cgo4 _Ctype_double = _Ctype_double /*line :323:72*/(ry); _cgoCheckPointer(_cgo0, nil); /*line :323:77*/_Cfunc__PDF_ellipse(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// EndDocument ...
func (p *PDFlib) EndDocument(options string) error {
	func() { _cgo0 := /*line :329:22*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :329:38*/(options); _cgoCheckPointer(_cgo0, nil); /*line :329:48*/_Cfunc__PDF_end_document(_cgo0, _cgo1); }()
	return p.catch()
}

// EndFont ...
func (p *PDFlib) EndFont() error {
	func() { _cgo0 := /*line :335:18*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :335:24*/_Cfunc__PDF_end_font(_cgo0); }()
	return p.catch()
}

// EndGlyph ...
func (p *PDFlib) EndGlyph() error {
	func() { _cgo0 := /*line :341:19*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :341:25*/_Cfunc__PDF_end_glyph(_cgo0); }()
	return p.catch()
}

// EndItem ...
func (p *PDFlib) EndItem(id int) error {
	func() { _cgo0 := /*line :347:18*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :347:30*/(id); _cgoCheckPointer(_cgo0, nil); /*line :347:35*/_Cfunc__PDF_end_item(_cgo0, _cgo1); }()
	return p.catch()
}

// EndLayer ...
func (p *PDFlib) EndLayer() error {
	func() { _cgo0 := /*line :353:19*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :353:25*/_Cfunc__PDF_end_layer(_cgo0); }()
	return p.catch()
}

// EndMc ...
func (p *PDFlib) EndMc() error {
	func() { _cgo0 := /*line :359:16*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :359:22*/_Cfunc__PDF_end_mc(_cgo0); }()
	return p.catch()
}

// EndPageExt ...
func (p *PDFlib) EndPageExt(options string) error {
	func() { _cgo0 := /*line :365:22*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :365:38*/(options); _cgoCheckPointer(_cgo0, nil); /*line :365:48*/_Cfunc__PDF_end_page_ext(_cgo0, _cgo1); }()
	return p.catch()
}

// EndPattern ...
func (p *PDFlib) EndPattern() error {
	func() { _cgo0 := /*line :371:21*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :371:27*/_Cfunc__PDF_end_pattern(_cgo0); }()
	return p.catch()
}

// EndTemplateExt ...
func (p *PDFlib) EndTemplateExt(w, h float64) error {
	func() { _cgo0 := /*line :377:26*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :377:41*/(w); var _cgo2 _Ctype_double = _Ctype_double /*line :377:54*/(h); _cgoCheckPointer(_cgo0, nil); /*line :377:58*/_Cfunc__PDF_end_template_ext(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// EndPath ...
func (p *PDFlib) EndPath() error {
	func() { _cgo0 := /*line :383:17*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :383:23*/_Cfunc__PDF_endpath(_cgo0); }()
	return p.catch()
}

// Fill ...
func (p *PDFlib) Fill() error {
	func() { _cgo0 := /*line :389:14*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :389:20*/_Cfunc__PDF_fill(_cgo0); }()
	return p.catch()
}

// FillImageblock ...
func (p *PDFlib) FillImageblock(page int, blockname string, image int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :395:36*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :395:48*/(page); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :395:65*/(blockname); var _cgo3 _Ctype_int = _Ctype_int /*line :395:83*/(image); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :395:101*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :395:111*/_Cfunc__PDF_fill_imageblock(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// FillPdfblock ...
func (p *PDFlib) FillPdfblock(page int, blockname string, content int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :401:34*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :401:46*/(page); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :401:63*/(blockname); var _cgo3 _Ctype_int = _Ctype_int /*line :401:81*/(content); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :401:101*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :401:111*/_Cfunc__PDF_fill_pdfblock(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// FillStroke ...
func (p *PDFlib) FillStroke() error {
	func() { _cgo0 := /*line :407:21*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :407:27*/_Cfunc__PDF_fill_stroke(_cgo0); }()
	return p.catch()
}

// FillTextblock ...
func (p *PDFlib) FillTextblock(page int, blockname, text, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :413:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :413:47*/(page); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :413:64*/(blockname); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :413:86*/(text); var _cgo4 _Ctype_int = /*line :413:94*/0; var _cgo5 *_Ctype_char = _Cfunc_CString /*line :413:106*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :413:116*/_Cfunc__PDF_fill_textblock(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }())
	return ret, p.catch()
}

// FitGraphics places vector graphics on a content stream, subject to various options.
func (p *PDFlib) FitGraphics(graphics int, x, y float64, options string) error {
	func() { _cgo0 := /*line :419:22*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :419:34*/(graphics); var _cgo2 _Ctype_double = _Ctype_double /*line :419:54*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :419:67*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :419:81*/(options); _cgoCheckPointer(_cgo0, nil); /*line :419:91*/_Cfunc__PDF_fit_graphics(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// FitImage ...
func (p *PDFlib) FitImage(image int, x, y float64, options string) error {
	func() { _cgo0 := /*line :425:19*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :425:31*/(image); var _cgo2 _Ctype_double = _Ctype_double /*line :425:48*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :425:61*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :425:75*/(options); _cgoCheckPointer(_cgo0, nil); /*line :425:85*/_Cfunc__PDF_fit_image(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// FitPdiPage ...
func (p *PDFlib) FitPdiPage(page int, x, y float64, options string) error {
	func() { _cgo0 := /*line :431:22*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :431:34*/(page); var _cgo2 _Ctype_double = _Ctype_double /*line :431:50*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :431:63*/(y); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :431:77*/(options); _cgoCheckPointer(_cgo0, nil); /*line :431:87*/_Cfunc__PDF_fit_pdi_page(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// FitTable ...
func (p *PDFlib) FitTable(table int, llx, lly, urx, ury float64, options string) (string, error) {
	ret := ( /*line :437:9*/_Cfunc_GoString /*line :437:18*/)(func() *_Ctype_char{ _cgo0 := /*line :437:37*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :437:49*/(table); var _cgo2 _Ctype_double = _Ctype_double /*line :437:66*/(llx); var _cgo3 _Ctype_double = _Ctype_double /*line :437:81*/(lly); var _cgo4 _Ctype_double = _Ctype_double /*line :437:96*/(urx); var _cgo5 _Ctype_double = _Ctype_double /*line :437:111*/(ury); var _cgo6 *_Ctype_char = _Cfunc_CString /*line :437:127*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :437:137*/_Cfunc__PDF_fit_table(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }())
	return ret, p.catch()
}

// FitTextflow ...
func (p *PDFlib) FitTextflow(textflow int, llx, lly, urx, ury float64, options string) (string, error) {
	ret := ( /*line :443:9*/_Cfunc_GoString /*line :443:18*/)(func() *_Ctype_char{ _cgo0 := /*line :443:40*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :443:52*/(textflow); var _cgo2 _Ctype_double = _Ctype_double /*line :443:72*/(llx); var _cgo3 _Ctype_double = _Ctype_double /*line :443:87*/(lly); var _cgo4 _Ctype_double = _Ctype_double /*line :443:102*/(urx); var _cgo5 _Ctype_double = _Ctype_double /*line :443:117*/(ury); var _cgo6 *_Ctype_char = _Cfunc_CString /*line :443:133*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :443:143*/_Cfunc__PDF_fit_textflow(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }())
	return ret, p.catch()
}

// FitTextline ...
func (p *PDFlib) FitTextline(text string, x, y float64, options string) error {
	func() { _cgo0 := /*line :449:22*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :449:38*/(text); var _cgo2 _Ctype_int = /*line :449:46*/0; var _cgo3 _Ctype_double = _Ctype_double /*line :449:57*/(x); var _cgo4 _Ctype_double = _Ctype_double /*line :449:70*/(y); var _cgo5 *_Ctype_char = _Cfunc_CString /*line :449:84*/(options); _cgoCheckPointer(_cgo0, nil); /*line :449:94*/_Cfunc__PDF_fit_textline(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5); }()
	return p.catch()
}

// GetBuffer ...
func (p *PDFlib) GetBuffer() ([]byte, int, error) {
	var size  /*line :455:11*/_Ctype_long /*line :455:17*/
	ret := []byte(( /*line :456:16*/_Cfunc_GoStringN /*line :456:26*/)(func() *_Ctype_char{ _cgo0 := /*line :456:45*/p.val; var _cgo1 *_Ctype_long = /*line :456:52*/&size; _cgoCheckPointer(_cgo0, nil); return /*line :456:58*/_Cfunc_PDF_get_buffer(_cgo0, _cgo1); }(),  /*line :456:60*/_Ctype_int /*line :456:65*/(size)))
	return ret, int(size), p.catch()
}

// GetParameter ...
func (p *PDFlib) GetParameter(key string, modifier float64) (string, error) {
	ret := ( /*line :462:9*/_Cfunc_GoString /*line :462:18*/)(func() *_Ctype_char{ _cgo0 := /*line :462:41*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :462:57*/(key); var _cgo2 _Ctype_double = _Ctype_double /*line :462:72*/(modifier); _cgoCheckPointer(_cgo0, nil); return /*line :462:83*/_Cfunc__PDF_get_parameter(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// GetValue ...
func (p *PDFlib) GetValue(key string, modifier float64) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :468:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :468:50*/(key); var _cgo2 _Ctype_double = _Ctype_double /*line :468:65*/(modifier); _cgoCheckPointer(_cgo0, nil); return /*line :468:76*/_Cfunc__PDF_get_value(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// InfoFont ...
func (p *PDFlib) InfoFont(font int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :474:34*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :474:46*/(font); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :474:63*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :474:83*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :474:93*/_Cfunc__PDF_info_font(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoGraphics formats vector graphics and query metrics and other properties.
func (p *PDFlib) InfoGraphics(graphics int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :480:38*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :480:50*/(graphics); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :480:71*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :480:91*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :480:101*/_Cfunc__PDF_info_graphics(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoImage ...
func (p *PDFlib) InfoImage(image int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :486:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :486:47*/(image); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :486:65*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :486:85*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :486:95*/_Cfunc__PDF_info_image(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoMatchbox ...
func (p *PDFlib) InfoMatchbox(boxname string, num int, keyword string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :492:38*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :492:54*/(boxname); var _cgo2 _Ctype_int = /*line :492:65*/0; var _cgo3 _Ctype_int = _Ctype_int /*line :492:73*/(num); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :492:89*/(keyword); _cgoCheckPointer(_cgo0, nil); return /*line :492:99*/_Cfunc__PDF_info_matchbox(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// InfoPath ...
func (p *PDFlib) InfoPath(path int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :498:34*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :498:46*/(path); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :498:63*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :498:83*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :498:93*/_Cfunc__PDF_info_path(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoPdiPage ...
func (p *PDFlib) InfoPdiPage(page int, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :504:38*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :504:50*/(page); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :504:67*/(keyword); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :504:87*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :504:97*/_Cfunc__PDF_info_pdi_page(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// InfoTable ...
func (p *PDFlib) InfoTable(table int, keyword string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :510:35*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :510:47*/(table); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :510:65*/(keyword); _cgoCheckPointer(_cgo0, nil); return /*line :510:75*/_Cfunc__PDF_info_table(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// InfoTextflow ...
func (p *PDFlib) InfoTextflow(textflow int, keyword string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :516:38*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :516:50*/(textflow); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :516:71*/(keyword); _cgoCheckPointer(_cgo0, nil); return /*line :516:81*/_Cfunc__PDF_info_textflow(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// InfoTextline ...
func (p *PDFlib) InfoTextline(text, keyword, options string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :522:38*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :522:54*/(text); var _cgo2 _Ctype_int = /*line :522:62*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :522:74*/(keyword); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :522:94*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :522:104*/_Cfunc__PDF_info_textline(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// InitGraphics ...
func (p *PDFlib) InitGraphics() error {
	func() { _cgo0 := /*line :528:22*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :528:28*/_Cfunc__PDF_initgraphics(_cgo0); }()
	return p.catch()
}

// LineTo ...
func (p *PDFlib) LineTo(x, y float64) error {
	func() { _cgo0 := /*line :534:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :534:31*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :534:44*/(y); _cgoCheckPointer(_cgo0, nil); /*line :534:48*/_Cfunc__PDF_lineto(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// Load3dData ...
func (p *PDFlib) Load3dData(filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :540:32*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :540:48*/(filename); var _cgo2 _Ctype_int = /*line :540:60*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :540:72*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :540:82*/_Cfunc__PDF_load_3ddata(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// LoadFont ...
func (p *PDFlib) LoadFont(fontname, encoding, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :546:30*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :546:46*/(fontname); var _cgo2 _Ctype_int = /*line :546:58*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :546:70*/(encoding); var _cgo4 *_Ctype_char = _Cfunc_CString /*line :546:91*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :546:101*/_Cfunc__PDF_load_font(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// LoadGraphics opens a disk-based or virtual vector graphics file subject to various options
func (p *PDFlib) LoadGraphics(graphicstype, filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :552:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :552:50*/(graphicstype); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :552:75*/(filename); var _cgo3 _Ctype_int = /*line :552:87*/0; var _cgo4 *_Ctype_char = _Cfunc_CString /*line :552:99*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :552:109*/_Cfunc__PDF_load_graphics(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// LoadIccProfile ...
func (p *PDFlib) LoadIccProfile(profilename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :558:36*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :558:52*/(profilename); var _cgo2 _Ctype_int = /*line :558:67*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :558:79*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :558:89*/_Cfunc__PDF_load_iccprofile(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// LoadImage ...
func (p *PDFlib) LoadImage(imagetype, filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :564:31*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :564:47*/(imagetype); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :564:69*/(filename); var _cgo3 _Ctype_int = /*line :564:81*/0; var _cgo4 *_Ctype_char = _Cfunc_CString /*line :564:93*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :564:103*/_Cfunc__PDF_load_image(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }())
	return ret, p.catch()
}

// MakeSpotColor ...
func (p *PDFlib) MakeSpotColor(spotname string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :570:34*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :570:50*/(spotname); var _cgo2 _Ctype_int = /*line :570:62*/0; _cgoCheckPointer(_cgo0, nil); return /*line :570:64*/_Cfunc__PDF_makespotcolor(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// McPoint ...
func (p *PDFlib) McPoint(tag, options string) error {
	func() { _cgo0 := /*line :576:18*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :576:34*/(tag); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :576:50*/(options); _cgoCheckPointer(_cgo0, nil); /*line :576:60*/_Cfunc__PDF_mc_point(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// MoveTo ...
func (p *PDFlib) MoveTo(x, y float64) error {
	func() { _cgo0 := /*line :582:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :582:31*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :582:44*/(y); _cgoCheckPointer(_cgo0, nil); /*line :582:48*/_Cfunc__PDF_moveto(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// OpenPdiDocument ...
func (p *PDFlib) OpenPdiDocument(filename, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :588:38*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :588:54*/(filename); var _cgo2 _Ctype_int = /*line :588:66*/0; var _cgo3 *_Ctype_char = _Cfunc_CString /*line :588:78*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :588:88*/_Cfunc__PDF_open_pdi_document(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// OpenPdiPage ...
func (p *PDFlib) OpenPdiPage(doc, page int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :594:34*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :594:46*/(doc); var _cgo2 _Ctype_int = _Ctype_int /*line :594:58*/(page); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :594:75*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :594:85*/_Cfunc__PDF_open_pdi_page(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// PcosGetNumber ...
func (p *PDFlib) PcosGetNumber(doc int, path string) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :600:40*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :600:52*/(doc); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :600:68*/(path); _cgoCheckPointer(_cgo0, nil); return /*line :600:75*/_Cfunc__PDF_pcos_get_number(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// PcosGetString ...
func (p *PDFlib) PcosGetString(doc int, path string) (string, error) {
	ret := string(( /*line :606:16*/_Cfunc_GoString /*line :606:25*/)(func() *_Ctype_char{ _cgo0 := /*line :606:50*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :606:62*/(doc); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :606:78*/(path); _cgoCheckPointer(_cgo0, nil); return /*line :606:85*/_Cfunc__PDF_pcos_get_string(_cgo0, _cgo1, _cgo2); }()))
	return ret, p.catch()
}

// PcosGetStream ...
func (p *PDFlib) PcosGetStream(doc int, options, path string) (string, error) {
	ret := "" // string(C.GoString(C._PDF_pcos_get_stream(p.val, C.int(doc), 0, C.CString(options), C.CString(path))))
	return ret, p.catch()
}

// PocaDelete ...
func (p *PDFlib) PocaDelete(container int, options string) error {
	func() { _cgo0 := /*line :618:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :618:33*/(container); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :618:55*/(options); _cgoCheckPointer(_cgo0, nil); /*line :618:65*/_Cfunc__PDF_poca_delete(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// PocaInsert ...
func (p *PDFlib) PocaInsert(container int, options string) error {
	func() { _cgo0 := /*line :624:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :624:33*/(container); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :624:55*/(options); _cgoCheckPointer(_cgo0, nil); /*line :624:65*/_Cfunc__PDF_poca_insert(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// PocaNew ...
func (p *PDFlib) PocaNew(options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :630:29*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :630:45*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :630:55*/_Cfunc__PDF_poca_new(_cgo0, _cgo1); }())
	return ret, p.catch()
}

// PocaRemove ...
func (p *PDFlib) PocaRemove(container int, options string) error {
	func() { _cgo0 := /*line :636:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :636:33*/(container); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :636:55*/(options); _cgoCheckPointer(_cgo0, nil); /*line :636:65*/_Cfunc__PDF_poca_remove(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// ProcessPdi ...
func (p *PDFlib) ProcessPdi(doc, page int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :642:32*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :642:44*/(doc); var _cgo2 _Ctype_int = _Ctype_int /*line :642:56*/(page); var _cgo3 *_Ctype_char = _Cfunc_CString /*line :642:73*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :642:83*/_Cfunc__PDF_process_pdi(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// RCurveTo ...
func (p *PDFlib) RCurveTo(x1, y1, x2, y2, x3, y3 float64) error {
	func() { _cgo0 := /*line :648:18*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :648:33*/(x1); var _cgo2 _Ctype_double = _Ctype_double /*line :648:47*/(x1); var _cgo3 _Ctype_double = _Ctype_double /*line :648:61*/(y1); var _cgo4 _Ctype_double = _Ctype_double /*line :648:75*/(x2); var _cgo5 _Ctype_double = _Ctype_double /*line :648:89*/(y2); var _cgo6 _Ctype_double = _Ctype_double /*line :648:103*/(y3); _cgoCheckPointer(_cgo0, nil); /*line :648:108*/_Cfunc__PDF_rcurveto(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// Rect ...
func (p *PDFlib) Rect(x, y, w, h float64) error {
	func() { _cgo0 := /*line :654:14*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :654:29*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :654:42*/(y); var _cgo3 _Ctype_double = _Ctype_double /*line :654:55*/(w); var _cgo4 _Ctype_double = _Ctype_double /*line :654:68*/(h); _cgoCheckPointer(_cgo0, nil); /*line :654:72*/_Cfunc__PDF_rect(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4); }()
	return p.catch()
}

// Restore ...
func (p *PDFlib) Restore() error {
	func() { _cgo0 := /*line :660:17*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :660:23*/_Cfunc__PDF_restore(_cgo0); }()
	return p.catch()
}

// ResumePage ...
func (p *PDFlib) ResumePage(options string) error {
	func() { _cgo0 := /*line :666:21*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :666:37*/(options); _cgoCheckPointer(_cgo0, nil); /*line :666:47*/_Cfunc__PDF_resume_page(_cgo0, _cgo1); }()
	return p.catch()
}

// Rotate ...
func (p *PDFlib) Rotate(phi float64) error {
	func() { _cgo0 := /*line :672:16*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :672:31*/(phi); _cgoCheckPointer(_cgo0, nil); /*line :672:37*/_Cfunc__PDF_rotate(_cgo0, _cgo1); }()
	return p.catch()
}

// Save ...
func (p *PDFlib) Save() error {
	func() { _cgo0 := /*line :678:14*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :678:20*/_Cfunc__PDF_save(_cgo0); }()
	return p.catch()
}

// Scale ...
func (p *PDFlib) Scale(sx, sy float64) error {
	func() { _cgo0 := /*line :684:15*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :684:30*/(sx); var _cgo2 _Ctype_double = _Ctype_double /*line :684:44*/(sy); _cgoCheckPointer(_cgo0, nil); /*line :684:49*/_Cfunc__PDF_scale(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetGraphicsOption sets one or more graphics appearance options.
func (p *PDFlib) SetGraphicsOption(options string) error {
	func() { _cgo0 := /*line :690:29*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :690:45*/(options); _cgoCheckPointer(_cgo0, nil); /*line :690:55*/_Cfunc__PDF_set_graphics_option(_cgo0, _cgo1); }()
	return p.catch()
}

// SetGstate ...
func (p *PDFlib) SetGstate(gstate int) error {
	func() { _cgo0 := /*line :696:20*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :696:32*/(gstate); _cgoCheckPointer(_cgo0, nil); /*line :696:41*/_Cfunc__PDF_set_gstate(_cgo0, _cgo1); }()
	return p.catch()
}

// SetInfo ...
func (p *PDFlib) SetInfo(key, value string) error {
	func() { _cgo0 := /*line :702:18*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :702:34*/(key); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :702:50*/(value); _cgoCheckPointer(_cgo0, nil); /*line :702:58*/_Cfunc__PDF_set_info(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetLayerDependency ...
func (p *PDFlib) SetLayerDependency(kind, options string) error {
	func() { _cgo0 := /*line :708:30*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :708:46*/(kind); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :708:63*/(options); _cgoCheckPointer(_cgo0, nil); /*line :708:73*/_Cfunc__PDF_set_layer_dependency(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetOption ...
func (p *PDFlib) SetOption(options string) error {
	func() { _cgo0 := /*line :714:20*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :714:36*/(options); _cgoCheckPointer(_cgo0, nil); /*line :714:46*/_Cfunc__PDF_set_option(_cgo0, _cgo1); }()
	return p.catch()
}

// SetParameter ...
func (p *PDFlib) SetParameter(key, value string) error {
	func() { _cgo0 := /*line :720:23*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :720:39*/(key); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :720:55*/(value); _cgoCheckPointer(_cgo0, nil); /*line :720:63*/_Cfunc__PDF_set_parameter(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetTextPos ...
func (p *PDFlib) SetTextPos(x, y float64) error {
	func() { _cgo0 := /*line :726:22*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :726:37*/(x); var _cgo2 _Ctype_double = _Ctype_double /*line :726:50*/(y); _cgoCheckPointer(_cgo0, nil); /*line :726:54*/_Cfunc__PDF_set_text_pos(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetValue ...
func (p *PDFlib) SetValue(key string, value float64) error {
	func() { _cgo0 := /*line :732:19*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :732:35*/(key); var _cgo2 _Ctype_double = _Ctype_double /*line :732:50*/(value); _cgoCheckPointer(_cgo0, nil); /*line :732:58*/_Cfunc__PDF_set_value(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetColor ...
func (p *PDFlib) SetColor(fstype, colorspace string, c1, c2, c3, c4 float64) error {
	func() { _cgo0 := /*line :738:18*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :738:34*/(fstype); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :738:53*/(colorspace); var _cgo3 _Ctype_double = _Ctype_double /*line :738:75*/(c1); var _cgo4 _Ctype_double = _Ctype_double /*line :738:89*/(c2); var _cgo5 _Ctype_double = _Ctype_double /*line :738:103*/(c3); var _cgo6 _Ctype_double = _Ctype_double /*line :738:117*/(c4); _cgoCheckPointer(_cgo0, nil); /*line :738:122*/_Cfunc__PDF_setcolor(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// SetDash ...
func (p *PDFlib) SetDash(b, w float64) error {
	func() { _cgo0 := /*line :744:17*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :744:32*/(b); var _cgo2 _Ctype_double = _Ctype_double /*line :744:45*/(w); _cgoCheckPointer(_cgo0, nil); /*line :744:49*/_Cfunc__PDF_setdash(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetDashPattern ...
func (p *PDFlib) SetDashPattern(options string) error {
	func() { _cgo0 := /*line :750:24*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :750:40*/(options); _cgoCheckPointer(_cgo0, nil); /*line :750:50*/_Cfunc__PDF_setdashpattern(_cgo0, _cgo1); }()
	return p.catch()
}

// SetFlat ...
func (p *PDFlib) SetFlat(flatness float64) error {
	func() { _cgo0 := /*line :756:17*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :756:32*/(flatness); _cgoCheckPointer(_cgo0, nil); /*line :756:43*/_Cfunc__PDF_setflat(_cgo0, _cgo1); }()
	return p.catch()
}

// SetFont ...
func (p *PDFlib) SetFont(font int, fontsize float64) error {
	func() { _cgo0 := /*line :762:17*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :762:29*/(font); var _cgo2 _Ctype_double = _Ctype_double /*line :762:45*/(fontsize); _cgoCheckPointer(_cgo0, nil); /*line :762:56*/_Cfunc__PDF_setfont(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// SetLinecap ...
func (p *PDFlib) SetLinecap(linecap int) error {
	func() { _cgo0 := /*line :768:20*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :768:32*/(linecap); _cgoCheckPointer(_cgo0, nil); /*line :768:42*/_Cfunc__PDF_setlinecap(_cgo0, _cgo1); }()
	return p.catch()
}

// SetLinejoin ...
func (p *PDFlib) SetLinejoin(linejoin int) error {
	func() { _cgo0 := /*line :774:21*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :774:33*/(linejoin); _cgoCheckPointer(_cgo0, nil); /*line :774:44*/_Cfunc__PDF_setlinejoin(_cgo0, _cgo1); }()
	return p.catch()
}

// SetLinewidth ...
func (p *PDFlib) SetLinewidth(width float64) error {
	func() { _cgo0 := /*line :780:22*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :780:37*/(width); _cgoCheckPointer(_cgo0, nil); /*line :780:45*/_Cfunc__PDF_setlinewidth(_cgo0, _cgo1); }()
	return p.catch()
}

// SetMatrix ...
func (p *PDFlib) SetMatrix(a, b, c, d, e, f float64) error {
	func() { _cgo0 := /*line :786:19*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :786:34*/(a); var _cgo2 _Ctype_double = _Ctype_double /*line :786:47*/(b); var _cgo3 _Ctype_double = _Ctype_double /*line :786:60*/(c); var _cgo4 _Ctype_double = _Ctype_double /*line :786:73*/(d); var _cgo5 _Ctype_double = _Ctype_double /*line :786:86*/(e); var _cgo6 _Ctype_double = _Ctype_double /*line :786:99*/(f); _cgoCheckPointer(_cgo0, nil); /*line :786:103*/_Cfunc__PDF_setmatrix(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6); }()
	return p.catch()
}

// SetMiterLimit ...
func (p *PDFlib) SetMiterLimit(miter float64) error {
	func() { _cgo0 := /*line :792:23*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :792:38*/(miter); _cgoCheckPointer(_cgo0, nil); /*line :792:46*/_Cfunc__PDF_setmiterlimit(_cgo0, _cgo1); }()
	return p.catch()
}

// Shading ...
func (p *PDFlib) Shading(shtype string, x0, y0, x1, y1, c1, c2, c3, c4 float64, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :798:28*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :798:44*/(shtype); var _cgo2 _Ctype_double = _Ctype_double /*line :798:62*/(x0); var _cgo3 _Ctype_double = _Ctype_double /*line :798:76*/(y0); var _cgo4 _Ctype_double = _Ctype_double /*line :798:90*/(x1); var _cgo5 _Ctype_double = _Ctype_double /*line :798:104*/(y1); var _cgo6 _Ctype_double = _Ctype_double /*line :798:118*/(c1); var _cgo7 _Ctype_double = _Ctype_double /*line :798:132*/(c2); var _cgo8 _Ctype_double = _Ctype_double /*line :798:146*/(c3); var _cgo9 _Ctype_double = _Ctype_double /*line :798:160*/(c4); var _cgo10 *_Ctype_char = _Cfunc_CString /*line :798:175*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :798:185*/_Cfunc__PDF_shading(_cgo0, _cgo1, _cgo2, _cgo3, _cgo4, _cgo5, _cgo6, _cgo7, _cgo8, _cgo9, _cgo10); }())
	return ret, p.catch()
}

// ShadingPattern ...
func (p *PDFlib) ShadingPattern(shading int, options string) (int, error) {
	ret := int(func() _Ctype_int{ _cgo0 := /*line :804:36*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :804:48*/(shading); var _cgo2 *_Ctype_char = _Cfunc_CString /*line :804:68*/(options); _cgoCheckPointer(_cgo0, nil); return /*line :804:78*/_Cfunc__PDF_shading_pattern(_cgo0, _cgo1, _cgo2); }())
	return ret, p.catch()
}

// Shfill ...
func (p *PDFlib) Shfill(shading int) error {
	func() { _cgo0 := /*line :810:16*/p.val; var _cgo1 _Ctype_int = _Ctype_int /*line :810:28*/(shading); _cgoCheckPointer(_cgo0, nil); /*line :810:38*/_Cfunc__PDF_shfill(_cgo0, _cgo1); }()
	return p.catch()
}

// Show ...
func (p *PDFlib) Show(text string) error {
	func() { _cgo0 := /*line :816:14*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :816:30*/(text); _cgoCheckPointer(_cgo0, nil); /*line :816:37*/_Cfunc__PDF_show(_cgo0, _cgo1); }()
	return p.catch()
}

// ShowXY ...
func (p *PDFlib) ShowXY(text string, x, y float64) error {
	func() { _cgo0 := /*line :822:17*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :822:33*/(text); var _cgo2 _Ctype_double = _Ctype_double /*line :822:49*/(x); var _cgo3 _Ctype_double = _Ctype_double /*line :822:62*/(y); _cgoCheckPointer(_cgo0, nil); /*line :822:66*/_Cfunc__PDF_show_xy(_cgo0, _cgo1, _cgo2, _cgo3); }()
	return p.catch()
}

// Skew ...
func (p *PDFlib) Skew(alpha, beta float64) error {
	func() { _cgo0 := /*line :828:14*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :828:29*/(alpha); var _cgo2 _Ctype_double = _Ctype_double /*line :828:46*/(beta); _cgoCheckPointer(_cgo0, nil); /*line :828:53*/_Cfunc__PDF_skew(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}

// StringWidth ...
func (p *PDFlib) StringWidth(text string, font int, fontsize float64) (float64, error) {
	ret := float64(func() _Ctype_double{ _cgo0 := /*line :834:36*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :834:52*/(text); var _cgo2 _Ctype_int = _Ctype_int /*line :834:65*/(font); var _cgo3 _Ctype_double = _Ctype_double /*line :834:81*/(fontsize); _cgoCheckPointer(_cgo0, nil); return /*line :834:92*/_Cfunc__PDF_stringwidth(_cgo0, _cgo1, _cgo2, _cgo3); }())
	return ret, p.catch()
}

// Stroke ...
func (p *PDFlib) Stroke() error {
	func() { _cgo0 := /*line :840:16*/p.val; _cgoCheckPointer(_cgo0, nil); /*line :840:22*/_Cfunc__PDF_stroke(_cgo0); }()
	return p.catch()
}

// SuspendPage ...
func (p *PDFlib) SuspendPage(options string) error {
	func() { _cgo0 := /*line :846:22*/p.val; var _cgo1 *_Ctype_char = _Cfunc_CString /*line :846:38*/(options); _cgoCheckPointer(_cgo0, nil); /*line :846:48*/_Cfunc__PDF_suspend_page(_cgo0, _cgo1); }()
	return p.catch()
}

// Translate ...
func (p *PDFlib) Translate(tx, ty float64) error {
	func() { _cgo0 := /*line :852:19*/p.val; var _cgo1 _Ctype_double = _Ctype_double /*line :852:34*/(tx); var _cgo2 _Ctype_double = _Ctype_double /*line :852:48*/(ty); _cgoCheckPointer(_cgo0, nil); /*line :852:53*/_Cfunc__PDF_translate(_cgo0, _cgo1, _cgo2); }()
	return p.catch()
}
